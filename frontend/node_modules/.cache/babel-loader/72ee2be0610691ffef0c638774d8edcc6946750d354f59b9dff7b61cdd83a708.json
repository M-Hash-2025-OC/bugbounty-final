{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\bugtracker\\\\frontend\\\\src\\\\components\\\\IssueList.jsx\";\nimport React from \"react\";\nimport \"./IssueList.css\";\nimport { updateIssueStatus } from \"../services/issueService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IssueList = ({\n  issues,\n  refresh\n}) => {\n  // Function to extract first image URL from markdown body\n  const extractImage = body => {\n    if (!body) return null;\n    const regex = /!\\[.*?\\]\\((.*?)\\)/;\n    const match = body.match(regex);\n    return match ? match[1] : null;\n  };\n  const handleMark = async (id, status) => {\n    await updateIssueStatus(id, status);\n    refresh(); // refresh list after marking\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Repository\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reporter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Screenshot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: issues.map(issue => {\n          const imageUrl = extractImage(issue.body);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: issue.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: issue.repo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: issue.reporter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: issue.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"View on GitHub\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageUrl,\n                alt: \"screenshot\",\n                width: \"60\",\n                style: {\n                  cursor: \"pointer\"\n                },\n                onClick: () => window.open(imageUrl, \"_blank\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this) : \"No Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: !issue.status || issue.status === \"unreviewed\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleMark(issue._id, \"valid\"),\n                  style: {\n                    marginRight: \"8px\",\n                    background: \"green\",\n                    color: \"white\"\n                  },\n                  children: \"Mark Valid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleMark(issue._id, \"invalid\"),\n                  style: {\n                    background: \"red\",\n                    color: \"white\"\n                  },\n                  children: \"Mark Invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: [\"\\u2705 \", issue.status.toUpperCase()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, issue._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = IssueList;\nexport default IssueList;\nvar _c;\n$RefreshReg$(_c, \"IssueList\");","map":{"version":3,"names":["React","updateIssueStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","IssueList","issues","refresh","extractImage","body","regex","match","handleMark","id","status","children","fileName","_jsxFileName","lineNumber","columnNumber","map","issue","imageUrl","title","repo","reporter","href","url","target","rel","src","alt","width","style","cursor","onClick","window","open","_id","marginRight","background","color","fontWeight","toUpperCase","_c","$RefreshReg$"],"sources":["E:/projects/bugtracker/frontend/src/components/IssueList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./IssueList.css\";\r\nimport { updateIssueStatus } from \"../services/issueService\";\r\n\r\nconst IssueList = ({ issues, refresh }) => {\r\n  // Function to extract first image URL from markdown body\r\n  const extractImage = (body) => {\r\n    if (!body) return null;\r\n    const regex = /!\\[.*?\\]\\((.*?)\\)/;\r\n    const match = body.match(regex);\r\n    return match ? match[1] : null;\r\n  };\r\n\r\n  const handleMark = async (id, status) => {\r\n    await updateIssueStatus(id, status);\r\n    refresh(); // refresh list after marking\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Repository</th>\r\n            <th>Reporter</th>\r\n            <th>Link</th>\r\n            <th>Screenshot</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {issues.map((issue) => {\r\n            const imageUrl = extractImage(issue.body);\r\n\r\n            return (\r\n              <tr key={issue._id}>\r\n                <td>{issue.title}</td>\r\n                <td>{issue.repo}</td>\r\n                <td>{issue.reporter}</td>\r\n                <td>\r\n                  <a href={issue.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    View on GitHub\r\n                  </a>\r\n                </td>\r\n                <td>\r\n                  {imageUrl ? (\r\n                    <img\r\n                      src={imageUrl}\r\n                      alt=\"screenshot\"\r\n                      width=\"60\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => window.open(imageUrl, \"_blank\")}\r\n                    />\r\n                  ) : (\r\n                    \"No Image\"\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {/* Only show buttons if issue is unreviewed */}\r\n                  {(!issue.status || issue.status === \"unreviewed\") ? (\r\n                    <>\r\n                      <button\r\n                        onClick={() => handleMark(issue._id, \"valid\")}\r\n                        style={{ marginRight: \"8px\", background: \"green\", color: \"white\" }}\r\n                      >\r\n                        Mark Valid\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleMark(issue._id, \"invalid\")}\r\n                        style={{ background: \"red\", color: \"white\" }}\r\n                      >\r\n                        Mark Invalid\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <span style={{ fontWeight: \"bold\" }}>\r\n                      ✅ {issue.status.toUpperCase()}\r\n                    </span>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IssueList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}